name: "Build"

concurrency: "test"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "eu-west-1"
  ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Check out source code
        uses: actions/checkout@v3

      - name: Build
        run: go build .

  test:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Install multy
        run: curl https://raw.githubusercontent.com/multycloud/multy/main/install.sh | sh

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.*'
          terraform_wrapper: false
      - uses: shogo82148/actions-setup-mysql@v1
        with:
          mysql-version: '8.0'

      - name: Init database
        run: |
          wget https://raw.githubusercontent.com/multycloud/multy/main/db/init.sql
          mysql -uroot -h127.0.0.1 -e 'source init.sql'
          mysql -uroot -h127.0.0.1 -D multydb -e 'INSERT INTO ApiKeys (ApiKey, UserId) VALUES ("test-secret-aws", "9991");'
          mysql -uroot -h127.0.0.1 -D multydb -e 'INSERT INTO ApiKeys (ApiKey, UserId) VALUES ("test-secret-azure", "9992");'

      - name: Start server
        run: |
          ~/.multy/bin/multy serve --port=8000 --dry_run &
          sleep 2
        env:
          MULTY_DB_CONN_STRING: "root:@tcp(localhost:3306)/multydb?parseTime=true"
          MULTY_API_ENDPOINT: "localhost:8000"
          USER_STORAGE_NAME: "prod-users-config"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Check out source code
        uses: actions/checkout@v3

      - name: Test
        run: "parallel --tagstring '{%}' TF_ACC=1 TF_VAR_cloud={} MULTY_API_KEY=test-secret-{} go test ./multy/... -v -timeout 60m ::: aws azure"
        env:
          TF_ACC: 1
          MULTY_API_ENDPOINT: "localhost:8000"
          MULTY_DB_CONN_STRING: "root:@tcp(localhost:3306)/multydb?parseTime=true"


  check-documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Check out source code
        uses: actions/checkout@v3

      - name: Generate documentation
        run: go run github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs

      # https://github.com/actions/checkout/issues/760
      - name: work around permission issue
        run: sudo git config --global --add safe.directory /github/workspace

      - name: Check if there are changes
        id: changes
        uses: UnicornGlobal/has-changes-action@v1.0.12

      - name: Process changes
        if: steps.changes.outputs.changed == 1
        run: |
          echo "Documentation is not up to date"
          exit 1